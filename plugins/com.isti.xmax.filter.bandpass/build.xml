<?xml version="1.0" encoding="UTF-8"?>

<!-- MTH
    basedir     = Dir where /source/FilterBP.java is located
    plugin.home = Dir where this plugin will be compiled to, e.g., framework will look for
        ${plugin.home}/classes/FilterBP.class AND
        ${plugin.home}/plugin.xml
    Note that plugin.xml specifies where the class file is wrt the plugin.xml file: 
        <runtime> 
                <library id="filterHP" path="classes/" type="code"/> 
        </runtime> 

    Requires that you've already compiled the isti traceview classes into ../../build/com/isti/... etc.
-->

<!-- Uses JPF - Java Plugin Framework -->
<project name="com.isti.xmax.filter.bandpass plug-in build file"
         default="help"
         basedir=".">
    
    <!-- Global Properties -->
    <property name="lib.dir"	location="../../lib"/>
    <property name="build.dir"	location="../../build"/>

    <!-- Build Classpath (Java Plugins) -->
    <path id="classpath">
        <fileset dir="${lib.dir}">
	    <include name="*.jar"/>
	</fileset>
    </path>
    <typedef resource="org/java/plugin/tools/ant/jpf-tasks.properties">
        <classpath refid="classpath"/>
    </typedef>
    
    <!-- Plugin Classpath -->
    <path id="plugin.classpath">
        <pathelement location="${build.dir}"/>
        <dirset dir="../">
            <include name="**/classes"/>
        </dirset>
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <!-- Plugin Info -->
    <jpf-info manifest="${basedir}/plugin.xml"
	      propertyid="plugin.id"
	      propertyversion="plugin.version" />
    <property name="plugin.home" value="${basedir}" />

    <!-- Initializes Java Plugins using JPF -->
    <jpf-path pathidref="plugin.classpath" pluginid="${plugin.id}">
        <fileset dir="${plugin.home}/.."
		 includes="*/plugin*.xml"
		 excludes="${plugin.id}/**" />
	<fileset file="plugin.xml" />
    </jpf-path>

    <!-- HELP -->
    <target name="help">
        <echo>
	    <![CDATA[
	        ${plugin.id} plug-in build file:
                Use top-level project build file to build application.
            ]]>
	</echo>
    </target>

    <!-- CLEAN-BUILD -->
    <target name="clean_build" description="clean up build content" >
        <delete dir="classes"/>
    </target>

    <!-- BUILD -->	
    <!-- target="1.7" in <javac></javac> -->  
    <target name="build" depends="clean_build">
        <echo>Building plug-in ${plugin.id} to folder ${plugin.home}</echo>
	<mkdir dir="${plugin.home}/classes" />
	<javac verbose="false" 
	       srcdir="${basedir}/source"
	       destdir="${plugin.home}/classes" 
	       listfiles="true" 
	       encoding="utf-8" 
	       debug="true"
	       includeantruntime="false">
	    <classpath refid="plugin.classpath"/> 
	    <compilerarg value="-Xlint"/>	
	</javac>

        <!-- Not sure this is needed since plugin.home = basedir
	<copy todir="${plugin.home}/classes">
	    <fileset dir="${basedir}/source"
		     includes="**/*"
		     excludes="**/.*,**/*.java" />
	</copy>
	<copy todir="${plugin.home}" includeemptydirs="false">
	    <fileset dir="${basedir}"
		     excludes="classes/,nbproject/,.*,*build*,source/" />
	</copy>
	-->
    </target>

    <!-- DOCS -->	
    <target name="docs">
        <echo>Generating javadoc for plug-in ${plugin.id} to folder ${plugin.home}/docs/api</echo>
	    <javadoc destdir="${plugin.home}/docs/api"
		     classpathref="plugin.classpath"
		     sourcepath="${basedir}/source"
		     packagenames="${plugin.id}.*">
	    </javadoc>
    </target>
</project>
